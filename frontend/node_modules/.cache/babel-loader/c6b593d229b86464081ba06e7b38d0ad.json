{"remainingRequest":"/Users/shengrui/Desktop/vis2023/system/EMINDS/frontend/node_modules/babel-loader/lib/index.js!/Users/shengrui/Desktop/vis2023/system/EMINDS/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/shengrui/Desktop/vis2023/system/EMINDS/frontend/src/components/EventprogressionView/EventprogressionView.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shengrui/Desktop/vis2023/system/EMINDS/frontend/src/components/EventprogressionView/EventprogressionView.js","mtime":1729747707420},{"path":"/Users/shengrui/Desktop/vis2023/system/EMINDS/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1729690872023},{"path":"/Users/shengrui/Desktop/vis2023/system/EMINDS/frontend/node_modules/babel-loader/lib/index.js","mtime":1729690872396},{"path":"/Users/shengrui/Desktop/vis2023/system/EMINDS/frontend/node_modules/eslint-loader/index.js","mtime":1729690872072}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/shengrui/Desktop/vis2023/system/EMINDS/frontend/src/components/EventprogressionView/EventprogressionView.js"],"names":["dataService","pipeService","d3","$","data","Sankey","sliderBottom","sliderLeft","formatPrefix","path","schemeGnBu","symbolDiamond2","name","components","props","computed","color_back","color_back_individual","opacity_back","line_color","sankey_linecolor","background_color","hover_color","pattern_data","Array","segment_data","start_flag","better_color","worse_color","angle_color","color_list","all_nodes","divide_line","overall","y_position","y_position_binary","transition_map","extracted_sequence","width_bar","y_scale_h","clickpath","watch","_this","draweventprogressionSankey","select","raise","remove","attr","emitPatternNone","mounted","drawLegendSelect","svg","append","svg_bound","g_prompt","rect","text","onPattern","dicMap","listMap","onSegment","console","log","t","i","length","j","stageMap","p","onClickPath","drawKeyPath","methods","number2literalMap","stage","drawStageCopy","key","key_list","split","map","Number","targetSVG","style","sourceG1","sourceG2","targetG1","targetG2","html","lst","result","temp_t","temp_n","parseInt","toString","push","dic","keys","Object","k_t","k_n","g_legend","on","drawLegend","stage_number","domain_x","color","scaleOrdinal","domain","range","c","splitString","S","P","segment","startsWith","slice","judgeSubString","parentString","subString","flag","flag_temp","findSubstringPositions","str","substr","positions","pos","indexOf","path_data","data_sequence","data_string","temp_individual","temp_string","data_extracted","path_latter","path_former","f_temp","substring","l_temp","f_temp_segment","l_temp_segment","tree_former","createTreeFromSequences","tree_latter","lineGenerator","line","x","d","y","curve","curveCatmullRom","alpha","width","height","frequency_center","svg_center","y_start_bar","x_start_temp","svg_center_hover","degree","Math","abs","toFixed","path_transition_former","path_transition_latter","type","obtainSubPath","svg_temp","sortArray","t_sum","tt","y_start_temp","path_temp","drawPath","unshift","former_flow","calculateFlow","latter_flow","drawLink","flow","num","y_d","source_x","source_x2","source_y_better","source_y_worse","source_y_better2","source_y_worse2","data_temp","k","datum","lower","path_sequence","n","key1","key2","x_start","y_start","y_scale","class_name","y_end","drawSubPath","color_stroke","obtainAllPath","calculateRatio","sequence","key_degree_map","difference","key_p","Set","ij","add","includes","sequences_temp","path_transition_temp","data_final_t","data_final","temp_p","q","emitClickPath","temp_result","y_start_i","parseFloat","svg_temp2","node","depth","currentDepth","value","count","childNodes","values","forEach","childNode","calculateTemp","arr","sum","calculateTemp2","tree","seq","item","sortTree","tree_keys","better_list","worse_list","number","draw_glyph","pathpattern","pathtransition","height_path","good","bad","calculate_node","result_n1","result_n2","maxnObtain","traverseTree","transition","s1","sequences","root","currentNode","drawIndividualSequence","user_number","x_scale","scaleLinear","latter_together","latter_num","value_arr","key_temp","deepClone","initalObj","finalObj","obj","prop","constructor","arguments","callee","stages","individual_sequence","key_sequence","value_sequence","individual_key","individual_value","time_matrix","current_stage","next_stage","key_transition","overall_scale","svg_node_boundingbox","y_position2","y_position_end","key_tt","key_t","h_scale","svg_link1","svg_link2","y_position_keys","y_position_keys2","current_pair","current_y","key_tt_next","next_y","height_temp","svg_node","y_last","draweventprogression","data_dic","subgroups","data_vis","temp","groups","group","scaleBand","padding","call","axisBottom","tickSizeOuter","axisLeft","schemeTableau10","stackedData","stack","selectAll","join","bandwidth","event","subGroupName","parentNode"],"mappings":"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","sourcesContent":["import dataService from '../../service/dataService.js'\nimport pipeService from '../../service/pipeService.js';\nimport * as d3 from 'd3'\nimport $, { data } from 'jquery'\nimport * as Sankey from '../../assets/sankey.js'\nimport { sliderBottom, sliderLeft } from 'd3-simple-slider'\nimport { formatPrefix, path, schemeGnBu, symbolDiamond2 } from 'd3'\n\nexport default {\n    name: 'EventprogressionView',\n    components: {\n    },\n    props: {\n    },\n    computed: {\n    },\n    data() {\n        return {\n            color_back: \"#e9ecef\", //sankey曲线的颜色\n            color_back_individual: \"#C3C3C9\", //高亮曲线的颜色\n            opacity_back: 0.6,\n            line_color: '#003049',\n            sankey_linecolor: '#d3d3d3',\n            background_color: 'white',\n            hover_color: '#C3C3C9',\n            pattern_data: new Array(),\n            segment_data: new Array(),\n            start_flag: 0,\n            better_color: '#ADC2BC',\n            worse_color: '#f5cac3',\n            angle_color: '#e5e9f2', //四个角的颜色\n            color_list: [\"#768f89\", \"#adb49f\", \"#EFE8BD\", \"#e9d1b4\", \"#ddbcab\", \"#d2aaa3\"],\n            // color_list: [\"#B6B6C6\", \"#ADB9C1\", \"#AFB5A4\", \"#EFE8BD\", \"#e9d1b4\", \"#d2aaa3\"],\n            // color_list: [\"#f4f1de\", \"#eab69f\", \"#e07a5f\", \"#3d405b\", \"#81b29a\", \"#f2cc8f\"],\n            // color_list: [\"#264653\", \"#2a9d8f\", \"#e9c46a\", \"#f4a261\", \"#e76f51\", \"#E3C6A9\"],\n            // color_list: [\"#B5B5C5\", \"#E2C9B3\", \"#ECC0C0\", \"#CAD5C3\", \"#9CB8CD\", \"#E3C6A9\"],\n            all_nodes: [],\n            divide_line: '#d0b8ac',\n            overall: 0, // 0表示默认选择查看全局better, 1表示全局worse，-1表示目前在展示align的sankey\n            y_position: {},\n            y_position_binary: {},\n            transition_map: [],\n            extracted_sequence: [], //存储包含该clickpath的序列\n            width_bar: 15,\n            y_scale_h: 0,\n            clickpath: ''\n        }\n    },\n    watch: {\n        start_flag: function () {\n            const _this = this\n            if (_this.start_flag == 2) {\n                _this.draweventprogressionSankey(_this.segment_data[0], _this.segment_data[2][0], _this.pattern_data)\n                _this.start_flag = 0\n            }\n            d3.select('.prompt_3').raise();\n        },\n        overall: function () {\n            const _this = this\n            $('.progressionoverview').remove()\n            $('.overall-better').attr(\"fill\", _this.background_color)\n            $('.overall-worse').attr(\"fill\", _this.background_color)\n            if (_this.overall == 0 || _this.overall == 1) {\n                pipeService.emitPatternNone(\"none\")\n            }\n            if (_this.overall == 0) {\n                $('.clickpathtransition').remove()\n                $('.overall-better').attr(\"fill\", _this.better_color)\n                _this.draweventprogressionSankey(_this.segment_data[0], _this.segment_data[2][0], _this.pattern_data)\n            }\n            if (_this.overall == 1) {\n                $('.clickpathtransition').remove()\n                $('.overall-worse').attr(\"fill\", _this.worse_color)\n                _this.draweventprogressionSankey(_this.segment_data[0], _this.segment_data[2][1], _this.pattern_data)\n            }\n            d3.select('.prompt_3').raise();\n        }\n    },\n    mounted: function () {\n        const _this = this\n        _this.drawLegendSelect()\n\n        const svg = d3.select(\".eventprogressionviewbody\")\n            .append(\"svg\")\n            .attr(\"width\", 880)\n            .attr(\"height\", 450)\n            .attr(\"class\", \"eventprogression\")\n\n        const svg_bound = svg.append('g')\n            .attr(\"width\", 880)\n            .attr(\"height\", 450)\n            .attr(\"transform\", \"translate(0, -30)\")\n\n        let g_prompt = svg.append('g')\n            .attr(\"class\", \"prompt_3\")\n            .attr(\"visibility\", \"hidden\")\n            .attr(\"transform\", \"translate(200, 40)\")\n\n        let rect = g_prompt.append('rect')\n            .attr('width', 650)  \n            .attr('height', 105)  \n            .attr('fill', 'white')  \n            .attr('stroke', 'black')\n            .attr('x', 0)  \n            .attr('y', 0);\n\n        let text = g_prompt.append('text')\n            .attr('x', 10)\n            .attr('y', 15)\n            .attr('fill', 'black')\n            .attr('font-size', '12px')\n\n        text.append('tspan')\n            .text('Sankey diagrams provide an overview of the stage progression of the recovery or deterioration group. ')\n            .attr('x', 10) \n            .attr('y', 20) \n        \n        text.append('tspan')\n            .text('A pattern-centric Sankey diagram shows the evolution of a specific stage pattern over time.')\n            .attr('x', 10) \n            .attr('y', 45) \n\n        text.append('tspan')\n            .text(' - All the sequences are aligned based on this selected pattern.')\n            .attr('x', 10) \n            .attr('y', 60) \n\n        text.append('tspan')\n            .text(' - The stage patterns at each time unit are aggregated into two nodes: the positivity (top) and negativity (bottom) nodes.')\n            .attr('x', 10) \n            .attr('y', 75) \n        \n        text.append('tspan')\n            .text(' - The height of each node at different time units indicates the frequency of this pattern.')\n            .attr('x', 10) \n            .attr('y', 90) \n\n        pipeService.onPattern(function (pattern_data) {\n            //console.log('******onPattern******', pattern_data)\n            _this.pattern_data[0] = _this.dicMap(pattern_data[0])\n            _this.pattern_data[1] = _this.listMap(pattern_data[1])\n            _this.start_flag = _this.start_flag + 1\n            g_prompt.raise()\n        })\n\n        pipeService.onSegment(function (data) {\n            console.log('******onSegment******', data)\n            // ********map*******\n            for (let t = 0; t < 2; t++) {\n                for (let i = 0; i < data[1][t].length; i++) {\n                    for (let j = 0; j < data[1][t][i].length; j++) {\n                        data[1][t][i][j][3] = _this.stageMap(data[1][t][i][j][3])\n                    }\n                }\n            }\n            for (let t = 0; t < 2; t++) {\n                for (let i = 0; i < data[2][t].length; i++) {\n                    for (let j = 0; j < data[2][t][i].length; j++) {\n                        for (let p = 0; p < data[2][t][i][j].length; p++) {\n                            data[2][t][i][j][p][0] = _this.stageMap(data[2][t][i][j][p][0])\n                        }\n                    }\n                }\n            }\n            _this.segment_data = data\n            _this.start_flag = _this.start_flag + 1\n            g_prompt.raise()\n        })\n\n        pipeService.onClickPath(function (data) {\n            _this.overall = -1\n            if (data[1] != -1) {\n                _this.transition_map = data[1]\n                $(\".clickpathtransition\").remove()\n                _this.clickpath = data[0]\n                _this.drawKeyPath(_this.segment_data[0], _this.segment_data[2], _this.pattern_data, data[0], data[1])\n            }\n            g_prompt.raise()\n        })\n\n        g_prompt.raise()\n\n        // pipeService.onStage(function (msg) {\n        //     var data = msg[2]\n        //     var active_k_msg = msg[0]\n        //     var passive_k_msg = msg[1]\n        //     data = eval(\"(\" + data + \")\")\n        //     _this.drawStage(active_k_msg, passive_k_msg, data)\n        // })\n\n    },\n    methods: {\n        number2literalMap(stage) {\n            if (stage == 0) {\n                return 'a'\n            }\n            if (stage == 1) {\n                return 'b'\n            }\n            if (stage == 2) {\n                return 'c'\n            }\n            if (stage == 3) {\n                return 'd'\n            }\n            if (stage == 4) {\n                return 'e'\n            }\n            if (stage == 5) {\n                return 'f'\n            }\n        },\n        drawStageCopy(key) {\n            const _this = this\n            const key_list = key.split(\"\").map(Number); // 将字符串拆分为字符数组，然后将每个字符转换为数字\n            console.log(key_list)\n            d3.select('.stagecopysvg').remove()\n            const targetSVG = d3.select('.eventprogression')\n                .append('g')\n                .attr(\"width\", 250)\n                .attr(\"height\", 200)\n                .attr(\"class\", \"stagecopysvg\")\n                .style('z-index', 3)\n                .attr('transform', 'translate(620, 280)')\n\n            targetSVG.append('rect')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('width', 260)\n                .attr('height', 147)\n                .attr('fill', 'white')\n                .attr('stroke', _this.sankey_linecolor)\n\n            for (let i = 0; i < key.length; i++) {\n                let sourceG1 = d3.select('.stage_single' + key_list[i])\n                let sourceG2 = d3.select('.stage_interaction' + key_list[i])\n                // 将目标SVG元素的大小设置为与源<g>元素相同\n                targetSVG.attr(\"width\", sourceG1.attr(\"width\"))\n                    .attr(\"height\", sourceG1.attr(\"height\"))\n\n                // 在目标SVG元素中创建一个新的<g>元素\n                let targetG1 = targetSVG.append(\"g\");\n                let targetG2 = targetSVG.append(\"g\");\n\n                targetG1.html(sourceG1.html())\n                    .attr(\"transform\", function () {\n                        if (key.length == 3) {\n                            return \"scale(0.6) translate(\" + (20 + i * 130) + \", 0)\"\n                        } else if (key.length == 2) {\n                            return \"scale(0.6) translate(\" + (60 + i * 170) + \", 0)\"\n                        } else {\n                            return \"scale(0.6) translate(140, 0)\"\n                        }\n                    })\n\n                targetG2.html(sourceG2.html())\n                    .attr(\"transform\", function () {\n                        if (key.length == 3) {\n                            return \"scale(0.6) translate(\" + (20 + i * 130) + \", 0)\"\n                        } else if (key.length == 2) {\n                            return \"scale(0.6) translate(\" + (60 + i * 170) + \", 0)\"\n                        } else {\n                            return \"scale(0.6) translate(140, 0)\"\n                        }\n                    })\n            }\n        },\n        listMap(lst) {\n            const _this = this\n            let result = []\n            for (let i = 0; i < lst.length; i++) {\n                let temp_t = lst[i]\n                let temp_n = ''\n                for (let j = 0; j < temp_t.length; j++) {\n                    temp_n += _this.stageMap(parseInt(temp_t[j])).toString()\n                }\n                result.push(temp_n)\n            }\n            return result\n        },\n        dicMap(dic) {\n            const _this = this\n            let keys = Object.keys(dic)\n            const result = {}\n            for (let i = 0; i < keys.length; i++) {\n                let k_t = keys[i]\n                let k_n = ''\n                for (let j = 0; j < k_t.length; j++) {\n                    k_n += _this.stageMap(parseInt(k_t[j])).toString()\n                }\n                result[k_n] = dic[k_t]\n            }\n            return result\n        },\n        stageMap(stage) {\n            if (stage == 0) {\n                return 2\n            }\n            if (stage == 1) {\n                return 4\n            }\n            if (stage == 2) {\n                return 0\n            }\n            if (stage == 3) {\n                return 1\n            }\n            if (stage == 4) {\n                return 3\n            }\n            if (stage == 5) {\n                return 5\n            }\n        },\n        drawLegendSelect() {\n            const _this = this\n            const svg = d3.select(\".progressionviewheader\")\n                .append(\"svg\")\n                .attr(\"width\", 750)\n                .attr(\"height\", 20)\n\n            let g_legend = svg.append('g')\n\n            g_legend.append(\"rect\")\n                .attr(\"x\", 20)\n                .attr(\"y\", 3)\n                .attr(\"width\", 10)\n                .attr(\"height\", 10)\n                .attr(\"fill\", _this.better_color)\n                .attr(\"stroke\", \"black\")\n                .on(\"click\", function () {\n                    _this.overall = 0\n                })\n                .attr(\"class\", \"overall-better\")\n\n            g_legend.append(\"text\")\n                .attr(\"x\", 35)\n                .attr(\"y\", 13)\n                .attr(\"font-size\", 13)\n                .text(\"group1\")\n\n            g_legend.append(\"rect\")\n                .attr(\"x\", 82)\n                .attr(\"y\", 3)\n                .attr(\"width\", 10)\n                .attr(\"height\", 10)\n                .attr(\"fill\", _this.background_color)\n                .attr(\"stroke\", \"black\")\n                .on(\"click\", function () {\n                    _this.overall = 1\n                })\n                .attr(\"class\", \"overall-worse\")\n\n            g_legend.append(\"text\")\n                .attr(\"x\", 97)\n                .attr(\"y\", 13)\n                .attr(\"font-size\", 13)\n                .text(\"group2\")\n\n            g_legend.append(\"circle\")\n                .attr(\"cx\", 741)\n                .attr(\"cy\", 7)\n                .attr(\"r\", 5)\n                .attr(\"fill\", \"white\")\n                .attr(\"stroke\", \"red\")\n                .on(\"mouseover\", function () {\n                    $(\".prompt_3\").attr(\"visibility\", \"visible\");\n                })\n                .on(\"mouseout\", function () {\n                    $(\".prompt_3\").attr(\"visibility\", \"hidden\");\n                });\n\n            g_legend.append(\"text\")\n                .attr(\"x\", 738)\n                .attr(\"y\", 10)\n                .attr(\"font-size\", 8)\n                .text(\"?\")\n                .attr(\"fill\", \"#bc4b51\")\n                .on(\"mouseover\", function () {\n                    $(\".prompt_3\").attr(\"visibility\", \"visible\");\n                })\n                .on(\"mouseout\", function () {\n                    $(\".prompt_3\").attr(\"visibility\", \"hidden\");\n                });\n        },\n        drawLegend(stage_number) {\n            const _this = this\n            const svg = d3.select(\".progressionviewheader\")\n                .append(\"svg\")\n                .attr(\"width\", 600)\n                .attr(\"height\", 20)\n\n            const domain_x = []\n            for (let i = 0; i < stage_number; i++) {\n                domain_x.push(i)\n            }\n\n            const color = d3.scaleOrdinal()\n                .domain(domain_x)\n                .range(_this.color_list)\n\n            let g_legend = svg.append('g')\n            for (let c = 0; c < stage_number; c++) {\n                svg.append(\"circle\")\n                    .attr(\"cx\", 22 + c * 80)\n                    .attr(\"cy\", 10)\n                    .attr(\"r\", 7)\n                    .attr(\"fill\", color(c))\n                    .attr(\"stroke\", \"#5b5b5b\")\n\n                svg.append(\"text\")\n                    .attr(\"x\", 35 + c * 80)\n                    .attr(\"y\", 14)\n                    .attr(\"font-size\", 13)\n                    .text(\"stage \" + (c + 1))\n            }\n        },\n        splitString(S, P) {\n            let result = [];\n\n            while (S.length > 0) {\n                let segment = '';\n                for (let i = 0; i < P.length; i++) {\n                    if (S.startsWith(P[i])) {\n                        if (P[i].length > segment.length) {\n                            segment = P[i];\n                        }\n                    }\n                }\n\n                if (segment === '') {\n                    // 如果找不到匹配的pattern，说明无法分解字符串\n                    return null;\n                }\n\n                result.push(segment);\n                S = S.slice(segment.length);\n            }\n\n            return result;\n        },\n        judgeSubString(parentString, subString) {\n            let flag = 0\n            for (let i = 0; i < parentString.length; i++) {\n                if (parentString[i] == subString[0]) {\n                    let flag_temp = 1\n                    for (let j = 0; j < subString.length; j++) {\n                        if (parentString[i + j] != subString[j]) {\n                            flag_temp = 0\n                            break\n                        }\n                    }\n                    flag = flag_temp\n                    if (flag == 1) {\n                        return true\n                    }\n                }\n            }\n            return false\n        },\n        findSubstringPositions(str, substr) {\n            const positions = [];\n            let pos = str.indexOf(substr);\n            while (pos !== -1) {\n                positions.push(pos);\n                pos = str.indexOf(substr, pos + 1);\n            }\n            return positions;\n        },\n        drawKeyPath(stage_number, segment_data, pattern_data, clickpath, path_data) {\n            const _this = this\n            const svg = d3.select(\".eventprogression\").append(\"g\")\n                .attr(\"class\", \"svg\")\n                .attr(\"width\", 800)\n                .attr(\"height\", 450)\n                .attr(\"class\", \"clickpathtransition\")\n                .attr(\"transform\", \"translate(0, 0)\")\n\n            // 首先在序列数据中extarct出所有包含clickpath的路径\n            const data_sequence = []\n            const data_string = []\n            for (let i = 0; i < segment_data[0].length; i++) {\n                let temp_individual = []\n                let temp_string = ''\n                for (let j = 0; j < segment_data[0][i].length; j++) {\n                    temp_individual.push(parseInt(segment_data[0][i][j][0]))\n                    temp_string = temp_string + segment_data[0][i][j][0]\n                }\n                data_sequence.push(temp_individual)\n                data_string.push(temp_string)\n            }\n            for (let i = 0; i < segment_data[1].length; i++) {\n                let temp_individual = []\n                let temp_string = ''\n                for (let j = 0; j < segment_data[1][i].length; j++) {\n                    temp_individual.push(parseInt(segment_data[1][i][j][0]))\n                    temp_string = temp_string + segment_data[1][i][j][0]\n                }\n                data_sequence.push(temp_individual)\n                data_string.push(temp_string)\n            }\n            // extract出所有包括该子序列的序列\n            const data_extracted = []\n            for (let i = 0; i < data_string.length; i++) {\n                if (_this.judgeSubString(data_string[i], clickpath)) {\n                    data_extracted.push(data_string[i])\n                }\n            }\n            const path_latter = []\n            const path_former = []\n            const extracted_sequence = []\n            for (let i = 0; i < data_extracted.length; i++) {\n                // 首先要找到clickpath出现的位置\n                let positions = _this.findSubstringPositions(data_extracted[i], clickpath)\n                for (let j = 0; j < positions.length; j++) {\n                    if (positions[j] == 0 || positions[j] + clickpath.length == data_extracted[i].length) {\n                        continue\n                    } else {\n                        // 然后把clickpath前后路径分解掉\n                        let f_temp = data_extracted[i].substring(0, positions[j])\n                        let l_temp = data_extracted[i].substring(positions[j] + clickpath.length, data_extracted[i].length)\n                        let f_temp_segment = _this.splitString(f_temp, pattern_data[1])\n                        let l_temp_segment = _this.splitString(l_temp, pattern_data[1])\n                        path_former.push(f_temp_segment)\n                        path_latter.push(l_temp_segment)\n                        extracted_sequence.push([_this.splitString(f_temp, pattern_data[1]), _this.splitString(l_temp, pattern_data[1])])\n                    }\n                }\n            }\n\n            const tree_former = _this.createTreeFromSequences(path_former)\n            const tree_latter = _this.createTreeFromSequences(path_latter)\n            const domain_x = []\n            for (let i = 0; i < stage_number; i++) {\n                domain_x.push(i)\n            }\n\n            const color = d3.scaleOrdinal()\n                .domain(domain_x)\n                .range(_this.color_list)\n\n            const lineGenerator = d3.line()\n                .x(function (d) { return d.x; })\n                .y(function (d) { return d.y; })\n                .curve(d3.curveCatmullRom.alpha(0.5))\n\n            // 画中间\n            const width = 840\n            const height = 250 * 1.3\n            const width_bar = 15\n            let frequency_center = path_former.length\n            const y_scale_h = height / frequency_center\n            _this.y_scale_h = y_scale_h\n            let svg_center = svg.append('g').attr('class', 'center')\n            svg_center.append(\"rect\")\n                .attr(\"x\", width / 2 - 5)\n                .attr(\"y\", 20)\n                .attr(\"width\", width_bar * 2 + 10)\n                .attr(\"height\", height + 10)\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", _this.color_back)\n                .attr(\"opacity\", _this.opacity_back)\n\n            let y_start_bar = 25\n\n            for (let i = 0; i < clickpath.length; i++) {\n                let x_start_temp = width / 2 + i * width_bar * 2 / clickpath.length\n                if (clickpath.length == 1) {\n                    x_start_temp = width / 2 + i * width_bar + 7\n                }\n                svg_center.append('rect')\n                    .attr('x', x_start_temp)\n                    .attr('y', y_start_bar)\n                    .attr('width', function () {\n                        if (clickpath.length < 2) {\n                            return width_bar\n                        } else {\n                            return 2 / clickpath.length * width_bar\n                        }\n                    })\n                    .attr('height', y_scale_h * frequency_center)\n                    .attr('fill', color(parseInt(clickpath[i])))\n                    .attr('stroke', 'white')\n                    .attr('class', 'center-key')\n                    .on('mouseenter', function () {\n                        $('.center-key').attr('stroke', _this.hover_color).attr('stroke-width', 3)\n                        $('.center-hover').attr('visibility', 'visable')\n                        //console.log('Test1-drawStageCopy', clickpath)\n                        _this.drawStageCopy(clickpath)\n                    })\n                    .on('mouseleave', function () {\n                        $('.center-key').attr('stroke', 'white').attr('stroke-width', 0.5)\n                        $('.center-hover').attr('visibility', 'hidden')\n                        d3.select('.stagecopysvg').remove()\n                    })\n            }\n\n            // 画中心hover图标\n            let svg_center_hover = svg_center.append('g').attr(\"class\", \"center-hover\").attr('visibility', 'hidden')\n            svg_center_hover.append('rect')\n                .attr('x', width / 2 - width_bar * 3)\n                .attr('y', height / 2)\n                .attr('width', 120)\n                .attr('height', 30)\n                .attr('fill', 'white')\n                .attr('stroke', '#d3d3d3')\n                .attr('stroke-width', 0.5)\n\n            let degree = _this.pattern_data[0][clickpath]\n\n            svg_center_hover.append(\"rect\")\n                .attr(\"x\", width / 2)\n                .attr(\"y\", height / 2 + 5)\n                .attr(\"width\", 32)\n                .attr(\"height\", 20)\n                .attr(\"stroke\", function () {\n                    if (degree[0] > degree[1]) {\n                        return _this.better_color\n                    } else {\n                        return _this.worse_color\n                    }\n                })\n                .attr(\"fill\", \"none\")\n\n            svg_center_hover.append(\"text\")\n                .attr(\"x\", width / 2 + 1)\n                .attr(\"y\", height / 2 + 20)\n                .attr(\"font-size\", 15)\n                .text(function () {\n                    return Math.abs((degree[0] - degree[1]) * 100).toFixed(1)\n                })\n                .attr(\"fill\", function () {\n                    if (degree[0] > degree[1]) {\n                        return _this.better_color\n                    } else {\n                        return _this.worse_color\n                    }\n                })\n\n            let path_transition_former = _this.transition_map[clickpath][0]\n            let path_transition_latter = _this.transition_map[clickpath][1]\n\n            svg_center_hover.append(\"rect\")\n                .attr(\"x\", width / 2 - 38)\n                .attr(\"y\", height / 2 + 5)\n                .attr(\"width\", 32)\n                .attr(\"height\", 20 * path_transition_former[0])\n                .attr(\"stroke\", 'none')\n                .attr(\"fill\", _this.better_color)\n\n            svg_center_hover.append(\"rect\")\n                .attr(\"x\", width / 2 - 38)\n                .attr(\"y\", height / 2 + 5 + 20 * path_transition_former[0])\n                .attr(\"width\", 32)\n                .attr(\"height\", 20 * path_transition_former[1])\n                .attr(\"stroke\", 'none')\n                .attr(\"fill\", _this.worse_color)\n\n            svg_center_hover.append(\"rect\")\n                .attr(\"x\", width / 2 + 38)\n                .attr(\"y\", height / 2 + 5)\n                .attr(\"width\", 32)\n                .attr(\"height\", 20 * path_transition_latter[0])\n                .attr(\"stroke\", 'none')\n                .attr(\"fill\", _this.better_color)\n\n            svg_center_hover.append(\"rect\")\n                .attr(\"x\", width / 2 + 38)\n                .attr(\"y\", height / 2 + 5 + 20 * path_transition_latter[0])\n                .attr(\"width\", 32)\n                .attr(\"height\", 20 * path_transition_latter[1])\n                .attr(\"stroke\", 'none')\n                .attr(\"fill\", _this.worse_color)\n\n            // 画第i层路径，画出来并且返回每一个新状态的开始节点和结束节点\n            for (let i = 1; i < 5; i++) {\n                for (let j = 0; j < 2; j++) {\n                    let type = ''\n                    _this.all_nodes = []\n                    let x_start_temp = 0\n                    if (j == 1) {\n                        type = 'latter'\n                        _this.obtainSubPath(tree_latter, i)\n                        x_start_temp = width / 2 + i * width_bar * 6.8\n                    } else {\n                        type = 'former'\n                        _this.obtainSubPath(tree_former, i)\n                        x_start_temp = width / 2 - i * width_bar * 6.8\n                    }\n                    // j=0表示画latter，j=1表示画former\n                    let svg_temp = svg.append('g').attr('class', type + i)\n                    let path = _this.sortArray(_this.all_nodes, pattern_data)\n                    let t_sum = 0\n                    for (let tt = 0; tt < _this.all_nodes.length; tt++) {\n                        t_sum += _this.all_nodes[tt][1]\n                    }\n                    let y_start_temp = 25\n                    let path_temp = path_former\n                    if (type == 'latter') {\n                        path_temp = path_latter\n                    }\n                    _this.drawPath(path, svg_temp, x_start_temp, y_start_temp, stage_number, y_scale_h, color, width, width_bar, type + i, path_temp, extracted_sequence)\n                }\n            }\n            // 画每两层之间的link\n            for (let i = 0; i < path_former.length; i++) {\n                path_former[i].unshift(clickpath)\n            }\n            for (let i = 0; i < path_latter.length; i++) {\n                path_latter[i].unshift(clickpath)\n            }\n\n            _this.y_position_binary['latter' + 0 + '-better'] = [width / 2 - 5, y_start_bar]\n            _this.y_position_binary['former' + 0 + '-better'] = [width / 2 - 5, y_start_bar]\n            _this.y_position_binary['latter' + 0 + '-worse'] = [width / 2 - 5, y_start_bar]\n            _this.y_position_binary['former' + 0 + '-worse'] = [width / 2 - 5, y_start_bar]\n\n            for (let i = 0; i < 4; i++) {\n                let former_flow = _this.calculateFlow(path_former, i, pattern_data)\n                let latter_flow = _this.calculateFlow(path_latter, i, pattern_data)\n                // 先画latter\n                _this.drawLink('latter', latter_flow, svg, width_bar, i, y_scale_h, \"g\", 0)\n                _this.drawLink('former', former_flow, svg, width_bar, i, y_scale_h, \"g\", 0)\n            }\n\n        },\n        drawLink(type, flow, svg, width_bar, num, y_scale_h, flag, y_d) {\n            const _this = this\n            let source_x = 0\n            let source_x2 = 0\n            let t = 5\n            if (type == 'latter') {\n                source_x = _this.y_position_binary[type + num + '-better'][0] + 2 * width_bar + 10\n                source_x2 = _this.y_position_binary[type + (num + 1) + '-better'][0]\n            } else {\n                source_x = _this.y_position_binary[type + num + '-better'][0]\n                source_x2 = _this.y_position_binary[type + (num + 1) + '-better'][0] + 2 * width_bar + 10\n                t = -5\n            }\n            let source_y_better = _this.y_position_binary[type + num + '-better'][1]\n            let source_y_worse = _this.y_position_binary[type + num + '-worse'][1]\n            let source_y_better2 = _this.y_position_binary[type + (num + 1) + '-better'][1]\n            let source_y_worse2 = _this.y_position_binary[type + (num + 1) + '-worse'][1]\n            if (y_d < 0) {\n                source_y_better = -y_d\n                source_y_worse = -y_d\n            }\n            if (y_d > 0) {\n                source_y_better2 = y_d\n                source_y_worse2 = y_d\n            }\n            const lineGenerator = d3.line()\n                .x(function (d) { return d.x; })\n                .y(function (d) { return d.y; })\n                .curve(d3.curveCatmullRom.alpha(0.5))\n            for (let i = 0; i < 4; i++) {\n                flow[i] *= y_scale_h\n                let data_temp = []\n                if (i == 0) {\n                    data_temp = [\n                        { x: source_x, y: source_y_better },\n                        { x: source_x + t, y: source_y_better },\n                        { x: source_x2 - t, y: source_y_better2 },\n                        { x: source_x2, y: source_y_better2 },\n                    ]\n                    source_y_better += flow[i]\n                    source_y_better2 += flow[i]\n                } else if (i == 1) {\n                    data_temp = [\n                        { x: source_x, y: source_y_better },\n                        { x: source_x + t, y: source_y_better },\n                        { x: source_x2 - t, y: source_y_worse2 },\n                        { x: source_x2, y: source_y_worse2 },\n                    ]\n                    source_y_better += flow[i]\n                    source_y_worse2 += flow[i]\n                } else if (i == 2) {\n                    data_temp = [\n                        { x: source_x, y: source_y_worse },\n                        { x: source_x + t, y: source_y_worse },\n                        { x: source_x2 - t, y: source_y_better2 },\n                        { x: source_x2, y: source_y_better2 },\n                    ]\n                    source_y_better2 += flow[i]\n                    source_y_worse += flow[i]\n                } else {\n                    data_temp = [\n                        { x: source_x, y: source_y_worse },\n                        { x: source_x + t, y: source_y_worse },\n                        { x: source_x2 - t, y: source_y_worse2 },\n                        { x: source_x2, y: source_y_worse2 },\n                    ]\n                    source_y_worse2 += flow[i]\n                    source_y_worse += flow[i]\n                }\n\n                for (let k = 0; k < flow[i]; k++) {\n                    for (let p = 0; p < 4; p++) {\n                        data_temp[p].y += 1\n                    }\n                    svg.append(\"path\")\n                        .datum(data_temp)\n                        .attr(\"fill\", \"none\")\n                        .attr(\"stroke\", function () {\n                            if (flag == 'g') {\n                                return _this.color_back\n                            } else {\n                                return _this.color_back_individual\n                            }\n                        })\n                        .attr(\"stroke-width\", 1)\n                        .attr(\"opacity\", _this.opacity_back)\n                        .attr(\"d\", lineGenerator)\n                        .lower()\n                }\n            }\n        },\n        calculateFlow(path_sequence, n, pattern_data) {\n            // 通过sequence获得第n层到第n+1层的流量\n            let result = [0, 0, 0, 0] //好变好，好变坏，坏变好，坏变坏\n            for (let i = 0; i < path_sequence.length; i++) {\n                if (n > path_sequence[i].length - 2) {\n                    continue\n                }\n                let key1 = path_sequence[i][n]\n                let key2 = path_sequence[i][n + 1]\n                if (pattern_data[0][key1][0] > pattern_data[0][key1][1]) {\n                    //前面的路径是好\n                    if (pattern_data[0][key2][0] > pattern_data[0][key2][1]) {\n                        //后面的路径是好\n                        result[0] += 1\n                    } else {\n                        //后面的路径是坏\n                        result[1] += 1\n                    }\n                } else {\n                    if (pattern_data[0][key2][0] > pattern_data[0][key2][1]) {\n                        //后面的路径是好\n                        result[2] += 1\n                    } else {\n                        //后面的路径是坏\n                        result[3] += 1\n                    }\n                }\n            }\n            return result\n        },\n        drawPath(path, svg, x_start, y_start, stage_number, y_scale, color, width, width_bar, class_name, path_sequence, extracted_sequence) {\n            const _this = this\n            _this.y_position_binary[class_name + '-better'] = [x_start - 5, y_start]\n            let y_end = _this.drawSubPath(path[0], svg, x_start, y_start, stage_number, y_scale, color, width, width_bar, class_name, path_sequence, extracted_sequence)\n            //画好路径的背景\n            let svg_temp = svg.append('g').lower()\n            const color_stroke = _this.color_back\n\n            svg_temp.append(\"rect\")\n                .attr(\"x\", x_start - 5)\n                .attr(\"y\", y_start - 5)\n                .attr(\"width\", width_bar * 2 + 10)\n                .attr(\"height\", y_end - y_start + 10)\n                .attr(\"fill\", \"none\")\n                .attr(\"opacity\", _this.opacity_back)\n                .attr(\"stroke\", color_stroke)\n            //画分割线\n            y_end += 10\n            y_start = y_end\n            _this.y_position_binary[class_name + '-worse'] = [x_start - 10, y_start + 5]\n            svg_temp.append(\"line\")\n                .attr(\"x1\", x_start + 2 * width_bar + 10)\n                .attr(\"x2\", x_start - 10)\n                .attr(\"y1\", y_end)\n                .attr(\"y2\", y_end)\n                .attr(\"stroke-width\", 2)\n                .attr(\"stroke\", _this.divide_line)\n            y_end = _this.drawSubPath(path[1], svg, x_start, y_end + 10, stage_number, y_scale, color, width, width_bar, class_name, path_sequence, extracted_sequence)\n            // 画坏路径的背景\n            svg_temp.append(\"rect\")\n                .attr(\"x\", x_start - 5)\n                .attr(\"y\", y_start + 10)\n                .attr(\"width\", width_bar * 2 + 10)\n                .attr(\"height\", y_end - y_start - 5)\n                .attr(\"fill\", \"none\")\n                .attr(\"opacity\", _this.opacity_back)\n                .attr(\"stroke\", color_stroke)\n        },\n        obtainAllPath(num, key, path_sequence) {\n            let result = []\n            for (let i = 0; i < path_sequence.length; i++) {\n                if (path_sequence[i].length > num && path_sequence[i][num] == key) {\n                    for (let j = num + 1; j < path_sequence[i].length; j++) {\n                        result.push(path_sequence[i][j])\n                    }\n                }\n            }\n            return result\n        },\n        calculateRatio(sequence, key_degree_map) {\n            let result = [0, 0]\n            for (let i = 0; i < sequence.length; i++) {\n                let difference = key_degree_map[sequence[i]][0] - key_degree_map[sequence[i]][1]\n                if (difference > 0) {\n                    result[0] += difference\n                } else {\n                    result[1] += Math.abs(difference)\n                }\n            }\n            if (result[0] + result[1] == 0) {\n                return result\n            } else {\n                return [result[0] / (result[0] + result[1]), result[1] / (result[0] + result[1])]\n            }\n        },\n        drawSubPath(data, svg, x_start, y_start, stage_number, y_scale, color, width, width_bar, class_name, path_sequence, extracted_sequence) {\n            // data是由[路径，频率]组成的序列\n            const _this = this\n            let keys = Object.keys(data)\n            let svg_temp = svg.append('g').lower()\n            // 画hover之后会显示出来的negative/positive degree以及negative/positive change\n            let key_degree_map = _this.pattern_data[0]//存储了这个path的好坏频率'13':[0.4, 0.7]\n            let key_p = new Set()\n            for (let i = 0; i < stage_number; i++) {\n                for (let j = -1; j < stage_number; j++) {\n                    for (let ij = -1; ij < stage_number; ij++) {\n                        if (j == -1) {\n                            key_p.add(i.toString())\n                        } else {\n                            if (ij == -1) {\n                                key_p.add(i.toString() + j.toString())\n                            } else {\n                                key_p.add(i.toString() + j.toString() + ij.toString())\n                            }\n                        }\n                    }\n                }\n            }\n            for (let key of key_p) {\n                if (keys.includes(key)) {\n                    // 需要得到这一层开始以key为start的后续\n                    let sequences_temp = _this.obtainAllPath(parseInt(class_name[class_name.length - 1]) - 1, key, path_sequence)\n                    // 通过sequence得到路径的情况\n                    let path_transition_temp = _this.calculateRatio(sequences_temp, key_degree_map)\n                    let degree = key_degree_map[key]\n                    // 然后需要通过path_transition_temp和degree画图\n                    _this.y_position[class_name + '-' + key] = y_start\n                    let data_final_t = []\n                    for (let p = 0; p < extracted_sequence.length; p++) {\n                        if (class_name[0] == 'f') {\n                            if (extracted_sequence[p][0][parseInt(class_name[class_name.length - 1]) - 1] == key) {\n                                // 把序列再拼起来\n                                data_final_t.push(extracted_sequence[p])\n                            }\n                        }\n                        if (class_name[0] == 'l') {\n                            if (extracted_sequence[p][1][parseInt(class_name[class_name.length - 1]) - 1] == key) {\n                                data_final_t.push(extracted_sequence[p])\n                            }\n                        }\n                    }\n                    //console.log(\"**********data_final_t\",class_name, key, data_final_t.length, _this.calculateTemp2(data), extracted_sequence)\n                    let data_final = []\n                    for (let t = 0; t < data_final_t.length; t++) {\n                        let temp_p = []\n                        for (let q = 3; q >= 0; q--) {\n                            if (data_final_t[t][0].length > q) {\n                                if (_this.pattern_data[0][data_final_t[t][0][q]][0] > _this.pattern_data[0][data_final_t[t][0][q]][1]) {\n                                    temp_p.push(1)\n                                } else {\n                                    temp_p.push(-1)\n                                }\n                            } else {\n                                temp_p.push(0)\n                            }\n                        }\n                        if (_this.pattern_data[0][_this.clickpath][0] > _this.pattern_data[0][_this.clickpath][1]) {\n                            temp_p.push(1)\n                        } else {\n                            temp_p.push(-1)\n                        }\n                        for (let q = 0; q < 4; q++) {\n                            if (data_final_t[t][1].length > q) {\n                                if (_this.pattern_data[0][data_final_t[t][1][q]][0] > _this.pattern_data[0][data_final_t[t][1][q]][1]) {\n                                    temp_p.push(1)\n                                } else {\n                                    temp_p.push(-1)\n                                }\n                            } else {\n                                temp_p.push(0)\n                            }\n                        }\n                        data_final.push(temp_p)\n                    }\n                    for (let t = 0; t < key.length; t++) {\n                        svg_temp.append('rect')\n                            .attr('x', function () {\n                                if (key.length < 2) {\n                                    return x_start + t * 2 / key.length * width_bar\n                                } else {\n                                    return x_start + t * 2 / key.length * width_bar\n                                }\n                            })\n                            .attr('y', y_start)\n                            .attr('width', function () {\n                                if (key.length < 2) {\n                                    return width_bar\n                                } else {\n                                    return 2 / key.length * width_bar\n                                }\n                            })\n                            .attr('height', y_scale * data[key])\n                            .attr('fill', color(parseInt(key[t])))\n                            .attr('stroke', 'white')\n                            .attr('stroke-width', 0.05)\n                            .attr('class', class_name + key)\n                            .attr('id', y_start)\n                            .style('z-index', 2)\n                            .on('click', function () {\n                                pipeService.emitClickPath([key, -1])\n                            })\n                            .on('mouseenter', function () {\n                                $('.' + class_name + key).attr('stroke', _this.hover_color)\n                                    .attr('stroke-width', 1)\n                                $('.' + class_name + '.hover.' + key).attr('visibility', 'visable')\n                                //console.log('Test2-drawStageCopy', key)\n                                _this.drawStageCopy(key)\n                                // 画hover之后会显示的sankey\n                                // 先提取在这个位置上有key元素的sequence\n                                // 统计每个时间点之间的流向，result[0,0,0,0]好到好，好到坏，坏到好，坏到坏\n                                for (let p = 4; p < data_final[0].length - 1; p++) {\n                                    let temp_result = [0, 0, 0, 0]\n                                    for (let q = 0; q < data_final.length; q++) {\n                                        if (data_final[q][p] == 1) {\n                                            if (data_final[q][p + 1] == 1) {\n                                                temp_result[0] += 1\n                                            }\n                                            if (data_final[q][p + 1] == -1) {\n                                                temp_result[1] += 1\n                                            }\n                                        }\n                                        if (data_final[q][p] == -1) {\n                                            if (data_final[q][p + 1] == 1) {\n                                                temp_result[2] += 1\n                                            }\n                                            if (data_final[q][p + 1] == -1) {\n                                                temp_result[3] += 1\n                                            }\n                                        }\n                                    }\n                                    let y_start_i = 0\n                                    if (p - 3 == parseInt(class_name[6]) && class_name[0] == 'l') {\n                                        y_start_i = parseFloat($('.' + class_name + key).attr('id')) - 3\n                                    }\n                                    if (p - 4 == parseInt(class_name[6]) && class_name[0] == 'l') {\n                                        y_start_i = -parseFloat($('.' + class_name + key).attr('id')) - 3\n                                    }\n                                    _this.drawLink('latter', temp_result, svg_temp2, _this.width_bar, p - 4, _this.y_scale_h, \"i\", y_start_i)\n                                }\n                                for (let p = 4; p >= 1; p--) {\n                                    let temp_result = [0, 0, 0, 0]\n                                    for (let q = 0; q < data_final.length; q++) {\n                                        if (data_final[q][p] == 1) {\n                                            if (data_final[q][p - 1] == 1) {\n                                                temp_result[0] += 1\n                                            }\n                                            if (data_final[q][p - 1] == -1) {\n                                                temp_result[1] += 1\n                                            }\n                                        }\n                                        if (data_final[q][p] == -1) {\n                                            if (data_final[q][p - 1] == 1) {\n                                                temp_result[2] += 1\n                                            }\n                                            if (data_final[q][p - 1] == -1) {\n                                                temp_result[3] += 1\n                                            }\n                                        }\n                                    }\n                                    let y_start_i = 0\n                                    if (5 - p == parseInt(class_name[6]) && class_name[0] == 'f') {\n                                        y_start_i = parseFloat($('.' + class_name + key).attr('id')) - 3\n                                    }\n                                    if (4 - p == parseInt(class_name[6]) && class_name[0] == 'f') {\n                                        y_start_i = -parseFloat($('.' + class_name + key).attr('id')) - 3\n                                    }\n                                    _this.drawLink('former', temp_result, svg_temp2, _this.width_bar, 4 - p, _this.y_scale_h, \"i\", y_start_i)\n                                }\n                            })\n                            .on('mouseleave', function () {\n                                $('.' + class_name + key).attr('stroke', 'white')\n                                    .attr('stroke-width', 0.5)\n                                $('.' + class_name + '.hover.' + key).attr('visibility', 'hidden')\n                                d3.select('.stagecopysvg').remove()\n                            })\n                    }\n                    if (key.length < 2) {\n                        // 画空白部分的，比如当只出现一个的时候右边需要补足\n                        svg_temp.append('rect')\n                            .attr('x', x_start + width_bar)\n                            .attr('y', y_start)\n                            .attr('width', width_bar)\n                            .attr('height', y_scale * data[key])\n                            .attr('fill', 'white')\n                            .attr('stroke', '#d3d3d3')\n                            .attr('stroke-width', 0.5)\n                            .attr('class', class_name + key)\n                            .style('z-index', 2)\n                            .on('click', function () {\n                                pipeService.emitClickPath([key, -1])\n                            })\n                            .on('mouseenter', function () {\n                                $('.' + class_name + key).attr('stroke', _this.hover_color)\n                                    .attr('stroke-width', 1)\n                                $('.' + class_name + '.hover.' + key).attr('visibility', 'visable')\n                                //console.log('Test3-drawStageCopy', key)\n                                _this.drawStageCopy(key)\n                            })\n                            .on('mouseleave', function () {\n                                $('.' + class_name + key).attr('stroke', 'white')\n                                    .attr('stroke-width', 0.5)\n                                $('.' + class_name + '.hover.' + key).attr('visibility', 'hidden')\n                                d3.select('.stagecopysvg').remove()\n                            })\n                    }\n                    let svg_temp2 = svg.append('g').attr('class', class_name + ' hover ' + key).attr('visibility', 'hidden').attr(\"transform\", \"translate(0, 5)\")\n                    // 画hover之后会显示的path transition和positive/negative degree\n                    svg_temp2.append('rect')\n                        .attr('x', x_start)\n                        .attr('y', y_start + y_scale * data[key] / 2)\n                        .attr('width', 80)\n                        .attr('height', 30)\n                        .attr('fill', 'white')\n                        .attr('stroke', '#d3d3d3')\n                        .attr('stroke-width', 0.5)\n\n                    svg_temp2.append(\"rect\")\n                        .attr(\"x\", function () {\n                            if (class_name[0] == 'f') {\n                                return x_start + 42\n                            } else {\n                                return x_start + 5\n                            }\n                        })\n                        .attr(\"y\", y_start + y_scale * data[key] / 2 + 5)\n                        .attr(\"width\", 32)\n                        .attr(\"height\", 20)\n                        .attr(\"stroke\", function () {\n                            if (degree[0] > degree[1]) {\n                                return _this.better_color\n                            } else {\n                                return _this.worse_color\n                            }\n                        })\n                        .attr(\"fill\", \"none\")\n\n                    svg_temp2.append(\"text\")\n                        .attr(\"x\", function () {\n                            if (class_name[0] == 'f') {\n                                return x_start + 43\n                            } else {\n                                return x_start + 6\n                            }\n                        })\n                        .attr(\"y\", y_start + y_scale * data[key] / 2 + 20)\n                        .attr(\"font-size\", 15)\n                        .text(function () {\n                            return Math.abs((degree[0] - degree[1]) * 100).toFixed(1)\n                        })\n                        .attr(\"fill\", function () {\n                            if (degree[0] > degree[1]) {\n                                return _this.better_color\n                            } else {\n                                return _this.worse_color\n                            }\n                        })\n\n                    svg_temp2.append(\"rect\")\n                        .attr(\"x\", function () {\n                            if (class_name[0] == 'l') {\n                                return x_start + 42\n                            } else {\n                                return x_start + 5\n                            }\n                        })\n                        .attr(\"y\", y_start + y_scale * data[key] / 2 + 5)\n                        .attr(\"width\", 32)\n                        .attr(\"height\", 20 * path_transition_temp[0])\n                        .attr(\"stroke\", 'none')\n                        .attr(\"fill\", _this.better_color)\n\n                    svg_temp2.append(\"rect\")\n                        .attr(\"x\", function () {\n                            if (class_name[0] == 'l') {\n                                return x_start + 42\n                            } else {\n                                return x_start + 5\n                            }\n                        })\n                        .attr(\"y\", y_start + y_scale * data[key] / 2 + 5 + 20 * path_transition_temp[0])\n                        .attr(\"width\", 32)\n                        .attr(\"height\", 20 * path_transition_temp[1])\n                        .attr(\"stroke\", 'none')\n                        .attr(\"fill\", _this.worse_color)\n\n                    y_start += y_scale * data[key] + 0.3\n                }\n            }\n\n            return y_start\n        },\n        obtainSubPath(node, depth, currentDepth = 0) {\n            const _this = this\n            if (typeof node === \"object\") {\n                if (currentDepth === depth) {\n                    _this.all_nodes.push([node.value, node.count])\n                } else {\n                    const childNodes = Object.values(node);\n                    childNodes.forEach((childNode) => {\n                        if (typeof childNode === \"object\") {\n                            _this.obtainSubPath(childNode, depth, currentDepth + 1);\n                        }\n                    });\n                }\n            }\n        },\n        calculateTemp(arr) {\n            let sum = 0\n            for (let i = 0; i < arr.length; i++) {\n                sum += arr[i][1]\n            }\n            return sum\n        },\n        calculateTemp2(tree) {\n            let sum = 0\n            let keys = Object.keys(tree)\n            for (let i = 0; i < keys.length; i++) {\n                sum += tree[keys[i]]\n            }\n            return sum\n        },\n        sortArray(seq, pattern_data) {\n            const _this = this\n            let tree = {};\n            for (let i = 0; i < seq.length; i++) {\n                let item = seq[i];\n                if (Object.keys(tree).includes(item[0])) {\n                    tree[item[0]] += item[1];\n                } else {\n                    tree[item[0]] = item[1];\n                }\n            }\n            return _this.sortTree(tree, pattern_data)\n        },\n        sortTree(tree, pattern_data) {\n            // 好结点:[按照stage类别排序],坏节点:[按照stage类别排序]\n            const _this = this\n            let tree_keys = Object.keys(tree)\n            let better_list = {}\n            let worse_list = {}\n            for (let i = 0; i < tree_keys.length; i++) {\n                let key = tree_keys[i]\n                let number = tree[tree_keys[i]]\n                if (pattern_data[0][key][0] > pattern_data[0][key][1]) {\n                    better_list[key] = number\n                } else {\n                    worse_list[key] = number\n                }\n            }\n            return [better_list, worse_list]\n        },\n        draw_glyph(svg, pathpattern, pathtransition, color, flag) {\n            const _this = this\n            svg.append(\"rect\")\n                .attr(\"x\", 365)\n                .attr(\"y\", 400)\n                .attr(\"width\", 70)\n                .attr(\"height\", 20)\n                .attr(\"fill\", '#5b5b5b')\n                .attr(\"stroke\", '#5b5b5b')\n                .attr(\"opacity\", 0.1)\n\n            svg.append(\"rect\")\n                .attr(\"x\", 352)\n                .attr(\"y\", 395)\n                .attr(\"width\", 96)\n                .attr(\"height\", 30)\n                .attr(\"fill\", 'none')\n                .attr(\"stroke\", '#5b5b5b')\n                .attr(\"opacity\", 0.2)\n            for (let i = 0; i < pathpattern.length; i++) {\n                if (i < pathpattern.length - 1) {\n                    svg.append(\"line\")\n                        .attr(\"x1\", 384 + i * 30)\n                        .attr(\"x2\", 384 + (i + 1) * 30)\n                        .attr(\"y1\", 410)\n                        .attr(\"y2\", 410)\n                        .attr(\"stroke\", \"black\")\n                }\n                svg.append(\"circle\")\n                    .attr(\"cx\", 384 + i * 30)\n                    .attr(\"cy\", 410)\n                    .attr(\"r\", 7)\n                    .attr(\"fill\", color(parseInt(pathpattern[i])))\n                    .attr(\"stroke\", '#5b5b5b')\n            }\n            const height_path = 30\n            let good = pathtransition[0]\n            let bad = pathtransition[1]\n            // 画中心的前面和后面的路径转移\n            if (flag == \"l\") {\n                svg.append('rect')\n                    .attr(\"x\", 435)\n                    .attr(\"y\", 395)\n                    .attr(\"fill\", _this.better_color)\n                    .attr(\"width\", 13)\n                    .attr(\"height\", height_path * good)\n                    .attr(\"opacity\", 0.8)\n\n                svg.append('rect')\n                    .attr(\"x\", 435)\n                    .attr(\"y\", 395 + height_path * good)\n                    .attr(\"fill\", _this.worse_color)\n                    .attr(\"width\", 13)\n                    .attr(\"height\", height_path * bad)\n                    .attr(\"opacity\", 0.8)\n            } else {\n                svg.append('rect')\n                    .attr(\"x\", 352)\n                    .attr(\"y\", 395)\n                    .attr(\"fill\", _this.better_color)\n                    .attr(\"width\", 13)\n                    .attr(\"height\", height_path * good)\n                    .attr(\"opacity\", 0.8)\n\n                svg.append('rect')\n                    .attr(\"x\", 352)\n                    .attr(\"y\", 395 + height_path * good)\n                    .attr(\"fill\", _this.worse_color)\n                    .attr(\"width\", 13)\n                    .attr(\"height\", height_path * bad)\n                    .attr(\"opacity\", 0.8)\n            }\n        },\n        calculate_node(tree, pattern_data) {\n            const _this = this\n            var result_n1 = []\n            var result_n2 = []\n            // 计算出这个节点的子节点频率最高的四个\n            let tree_keys = Object.keys(tree)\n            let data = {}\n            for (let i = 0; i < tree_keys.length; i++) {\n                data[tree_keys[i]] = tree[tree_keys[i]]['count']\n            }\n            let result = _this.maxnObtain(data, 4)\n            //console.log(\"the four nodes next\", result)\n            for (let i = 0; i < result.length; i++) {\n                _this.all_nodes = []\n                _this.traverseTree(tree[result[i][0]])\n                if (_this.all_nodes.length == 0) {\n                    result_n1.push(result[i][0])\n                    result_n2.push('end')\n                    continue\n                }\n                let transition = [0, 0] //好，坏\n                for (let i = 0; i < _this.all_nodes.length; i++) {\n                    transition[0] += pattern_data[0][_this.all_nodes[i][0]][0] * _this.all_nodes[i][1]\n                    transition[1] += pattern_data[0][_this.all_nodes[i][0]][1] * _this.all_nodes[i][1]\n                }\n                let s1 = transition[0] + transition[1]\n                transition[0] /= s1\n                transition[1] /= s1\n                result_n1.push(result[i])\n                result_n2.push(transition)\n            }\n            return [result_n1, result_n2]\n        },\n        createTreeFromSequences(sequences) {\n            const root = {};\n            sequences.forEach((sequence) => {\n                let currentNode = root\n                sequence.forEach((value) => {\n                    if (!currentNode[value]) {\n                        currentNode[value] = {\n                            value,\n                            count: 0,\n                        };\n                    }\n                    currentNode[value].count++\n                    currentNode = currentNode[value]\n                })\n            })\n            return root\n        },\n        traverseTree(node) {\n            const _this = this\n            if (typeof node === \"object\") {\n                _this.all_nodes.push([node.value, node.count])\n                const childNodes = Object.values(node);\n                childNodes.forEach((childNode) => {\n                    if (typeof childNode === \"object\") {\n                        _this.traverseTree(childNode);\n                    }\n                });\n            }\n        },\n        drawIndividualSequence(stage_number, data, x_start, y_start, pattern_data) {\n            const svg = d3.select(\".eventprogression\").append(\"g\")\n                .attr(\"class\", \"svg\")\n                .attr(\"width\", 800)\n                .attr(\"height\", 750)\n                .attr(\"transform\", \"translate(0, \" + (y_start + 10) + \")\")\n            const width = 800\n            const height = 350\n            const _this = this\n            const user_number = data.length\n\n            const domain_x = []\n            for (let i = 0; i < stage_number; i++) {\n                domain_x.push(i)\n            }\n            const color = d3.scaleOrdinal()\n                .domain(domain_x)\n                .range(_this.color_list)\n\n            const x_scale = d3.scaleLinear()\n                .range([x_start + 10, x_start + 100])\n                .domain([0, 5])\n\n            const y_scale = d3.scaleLinear()\n                .range([y_start + 40, y_start + 40 + height])\n                .domain([0, 20])\n\n            for (let i = 0; i < 35; i++) {\n                var latter_together = 0\n                for (let j = 0; j < data[i].length; j++) {\n                    if (latter_together == 0) {\n                        // 判断后面还有多少个数据\n                        let latter_num = data[i].length - j - 1\n                        var value = 0\n                        //最多不考虑超过3个数据\n                        if (latter_num > 3) {\n                            latter_num = 3\n                        }\n                        if (latter_num == 0) {\n                            let value_arr = pattern_data[0][data[i][j][0][0].toString()]\n                            value = value_arr[0] - value_arr[1]\n                        } else {\n                            for (let t = latter_num; t >= 0; t--) {\n                                // 后面跟几个数据点\n                                var key_temp = data[i][j][0][0].toString()\n                                for (let p = 1; p <= t; p++) {\n                                    key_temp = key_temp + data[i][j + p][0][0].toString()\n                                }\n                                if (pattern_data[1].includes(key_temp)) {\n                                    latter_together = t\n                                    let value_arr = pattern_data[0][key_temp]\n                                    value = value_arr[0] - value_arr[1]\n                                    break\n                                }\n                            }\n                        }\n                        svg.append(\"rect\")\n                            .attr(\"x\", x_scale(j) - 7)\n                            .attr(\"y\", y_scale(i) - 8)\n                            .attr(\"width\", x_scale(j + latter_together) - x_scale(j) + 14)\n                            .attr(\"height\", 15)\n                            .attr(\"fill\", function () {\n                                if (value > 0) {\n                                    return _this.better_color\n                                } else {\n                                    return _this.worse_color\n                                }\n                            })\n                            .attr(\"opacity\", function () {\n                                //console.log(pattern_data)\n                                if (value < 0) {\n                                    return 0.6 + (-value)\n                                } else {\n                                    return 0.6 + (value)\n                                }\n                            })\n                        latter_together = latter_together + 1\n                    }\n                    svg.append(\"circle\")\n                        .attr(\"cx\", x_scale(j))\n                        .attr(\"cy\", y_scale(i))\n                        .attr(\"r\", 6)\n                        .attr(\"stroke\", \"#5b5b5b\")\n                        .attr(\"fill\", color(data[i][j][0][0]))\n                    latter_together = latter_together - 1\n                }\n            }\n        },\n        deepClone(initalObj, finalObj) {\n            var obj = finalObj || {};\n            for (var i in initalObj) {\n                var prop = initalObj[i];        // 避免相互引用对象导致死循环，如initalObj.a = initalObj的情况\n                if (prop === obj) {\n                    continue;\n                }\n                if (typeof prop === 'object') {\n                    obj[i] = (prop.constructor === Array) ? [] : {};\n                    arguments.callee(prop, obj[i]);\n                } else {\n                    obj[i] = prop;\n                }\n            }\n            return obj;\n        },\n        draweventprogressionSankey(stage_number, data, pattern_data) {\n            const y_start = 0\n            const domain_x = []\n            const _this = this\n            for (let i = 0; i < stage_number; i++) {\n                domain_x.push(i)\n            }\n            const color = d3.scaleOrdinal()\n                .domain(domain_x)\n                .range(_this.color_list)\n            const width = 850\n            const height = 400\n            const user_number = data.length\n            const svg = d3.select(\".eventprogression\").append(\"g\")\n                .attr(\"class\", \"progressionoverview\")\n                .attr(\"width\", 850)\n                .attr(\"height\", 450)\n                .attr(\"transform\", \"translate(0, 10)\")\n\n            var stages = []\n            for (let i = 0; i < stage_number; i++) {\n                stages.push(i)\n            }\n\n            var data_sequence = []\n            for (let i = 0; i < user_number; i++) {//对于每一个人\n                let individual_sequence = []\n                for (let j = 0; j < data[i].length - 1; j++) {//对于每一个时间\n                    individual_sequence.push(data[i][j][0][0])\n                }\n                data_sequence.push(individual_sequence)\n            }\n\n            var key_sequence = []\n            var value_sequence = []\n            // 计算每个点属于什么pattern，相当于给每个点赋予pattern key\n            for (let i = 0; i < data_sequence.length; i++) {\n                let latter_together = 0\n                let individual_key = []\n                let individual_value = []\n                for (let j = 0; j < data_sequence[i].length; j++) {\n                    if (latter_together == 0) {\n                        // 判断后面还有多少个数据\n                        let latter_num = data_sequence[i].length - j - 1\n                        var value = 0\n                        var key_temp = ''\n                        //最多不考虑超过1个数据\n                        if (latter_num > 1) {\n                            latter_num = 1\n                        }\n                        if (latter_num == 0) {\n                            let value_arr = pattern_data[0][data_sequence[i][j].toString()]\n                            value = value_arr[0] - value_arr[1]\n                            key_temp = data_sequence[i][j].toString()\n                        } else {\n                            for (let t = latter_num; t >= 0; t--) {\n                                // 后面跟几个数据点\n                                key_temp = data_sequence[i][j].toString()\n                                for (let p = 1; p <= t; p++) {\n                                    key_temp = key_temp + data_sequence[i][j + p].toString()\n                                }\n                                if (pattern_data[1].includes(key_temp)) {\n                                    latter_together = t\n                                    let value_arr = pattern_data[0][key_temp]\n                                    value = value_arr[0] - value_arr[1]\n                                    break\n                                }\n                            }\n                        }\n                        for (let t = 0; t < latter_together + 1; t++) {\n                            individual_key.push(key_temp)\n                            individual_value.push(value)\n                        }\n                        latter_together = latter_together + 1\n                    }\n                    latter_together = latter_together - 1\n                }\n                key_sequence.push(individual_key)\n                value_sequence.push(individual_value)\n            }\n\n            // 需要对每一个时间点维持一个矩阵「1-1，1-2，1-3，....」分别有多少人\n            var time_matrix = {}\n            for (let i = 0; i < data_sequence.length; i++) {\n                for (let j = 0; j < data_sequence[i].length; j++) {\n                    let current_stage = data_sequence[i][j]\n                    let next_stage = 'x'\n                    if (j < data_sequence[i].length - 1) {\n                        next_stage = data_sequence[i][j + 1]\n                    }\n                    let key_transition = current_stage.toString() + next_stage.toString()\n                    if (Object.keys(time_matrix).includes(j.toString())) {\n                        if (Object.keys(time_matrix[j.toString()]).includes(key_transition)) {\n                            time_matrix[j.toString()][key_transition] = time_matrix[j.toString()][key_transition] + 1\n                        } else {\n                            time_matrix[j.toString()][key_transition] = 1\n                        }\n                    } else {\n                        time_matrix[j.toString()] = {}\n                        time_matrix[j.toString()][key_transition] = 1\n                    }\n                }\n            }\n            const overall_scale = 500 / data.length * 0.6\n            const x_scale = d3.scaleLinear()\n                .domain([0, Object.keys(time_matrix).length - 1])\n                .range([20, 830])\n            const y_scale = 0.5 * overall_scale\n            const svg_node_boundingbox = svg.append('g')\n                .attr(\"width\", 250)\n                .attr(\"height\", 300)\n            // 记录每个节点开始的位置\n            let y_position = {}\n            let y_position2 = {}\n            let y_position_end = new Array()\n            // 先画出了最后一列的其他所有列\n            for (let i = 0; i < Object.keys(time_matrix).length; i++) {\n                var y_start_temp = 30\n                for (let p = 0; p < stage_number; p++) {\n                    let key_tt = i.toString() + p.toString()\n                    //console.log(key_tt)\n                    y_position_end[key_tt] = y_start_temp\n                    //console.log(y_position_end)\n                    for (let q = 0; q < stage_number; q++) {\n                        let key_t = p.toString() + q.toString()\n                        if (Object.keys(time_matrix[i]).includes(key_t)) {\n                            if (Object.keys(y_position).includes(i.toString())) {\n                                y_position[i.toString()][key_t] = y_start_temp\n                                y_position2[i.toString()][key_t] = y_start_temp\n                            } else {\n                                y_position[i.toString()] = {}\n                                y_position2[i.toString()] = {}\n                                y_position[i.toString()][key_t] = y_start_temp\n                                y_position2[i.toString()][key_t] = y_start_temp\n                            }\n                            y_start_temp = y_start_temp + y_scale * time_matrix[i][key_t]\n                        }\n                    }\n                    let key_t = p.toString() + 'x' //考虑最末尾的位置\n                    if (Object.keys(y_position).includes(i.toString())) {\n                        y_position[i.toString()][key_t] = y_start_temp\n                    } else {\n                        y_position[i.toString()] = {}\n                        y_position[i.toString()][key_t] = y_start_temp\n                    }\n                    if (Object.keys(time_matrix[i]).includes(key_t)) {\n                        y_start_temp = y_start_temp + y_scale * time_matrix[i][key_t]\n                    }\n                    y_start_temp = y_start_temp + 10\n                }\n            }\n            // 画link\n            const h_scale = 0.5 * overall_scale\n            const svg_link1 = svg.append('g')\n                .attr(\"width\", 250)\n                .attr(\"height\", 300)\n                .style(\"z-index\", 1)\n                .attr(\"transform\", \"translate(0, 5)\")\n\n            const svg_link2 = svg.append('g')\n                .attr(\"width\", 250)\n                .attr(\"height\", 300)\n                .style(\"z-index\", 2)\n                .attr(\"transform\", \"translate(0, 5)\")\n\n            const lineGenerator = d3.line()\n                .x(function (d) { return d.x; })\n                .y(function (d) { return d.y; })\n                .curve(d3.curveCatmullRom.alpha(0.5))\n            let y_position_keys = Object.keys(y_position)\n            for (let i = 0; i < y_position_keys.length - 1; i++) {//第几个时间\n                let y_position_keys2 = Object.keys(y_position[i])//该时间的stage-stage\n                for (let p = 0; p < stage_number; p++) {\n                    for (let q = 0; q < stage_number; q++) {\n                        let current_pair = p.toString() + q.toString()\n                        if (y_position_keys2.includes(current_pair)) {\n                            let current_y = y_position2[y_position_keys[i]][current_pair]\n                            let next_stage = q.toString()\n                            if (next_stage != 'x') {\n                                let key_tt = y_position_keys[i] + next_stage\n                                let key_tt_next = (parseInt(y_position_keys[i]) + 1).toString() + next_stage\n                                let next_y = y_position_end[key_tt_next]\n                                let height_temp = time_matrix[y_position_keys[i]][current_pair] * h_scale\n                                let data_temp = [\n                                    { x: x_scale(i) + 15, y: current_y + height_temp / 2 },\n                                    { x: x_scale(i) + 25, y: current_y + height_temp / 2 },\n                                    { x: x_scale(i + 1) - 5, y: next_y + height_temp / 2 },\n                                    { x: x_scale(i + 1) + 10, y: next_y + height_temp / 2 }\n                                ]\n                                if (height_temp > 10) {\n                                    svg_link2.append(\"path\")\n                                        .datum(data_temp)\n                                        .attr(\"fill\", \"none\")\n                                        .attr(\"stroke\", _this.sankey_linecolor)\n                                        .attr(\"stroke-width\", height_temp)\n                                        .attr(\"opacity\", 0.5)\n                                        .attr(\"d\", lineGenerator);\n                                } else {\n                                    svg_link1.append(\"path\")\n                                        .datum(data_temp)\n                                        .attr(\"fill\", \"none\")\n                                        .attr(\"stroke\", _this.sankey_linecolor)\n                                        .attr(\"stroke-width\", height_temp)\n                                        .attr(\"opacity\", 0.2)\n                                        .attr(\"d\", lineGenerator);\n                                }\n\n                                y_position_end[key_tt_next] = y_position_end[key_tt_next] + height_temp\n                            }\n                        }\n                    }\n                }\n            }\n\n            const svg_node = svg.append('g')\n                .attr(\"width\", 250)\n                .attr(\"height\", 300)\n                .attr(\"transform\", \"translate(0, 5)\")\n            for (let i = 0; i < data_sequence.length; i++) {\n                let y_last = 0\n                for (let j = 0; j < data_sequence[i].length; j++) {\n                    let key_t = ''\n                    if (j == data_sequence[i].length - 1) {\n                        key_t = data_sequence[i][j].toString() + 'x'\n                    } else {\n                        key_t = data_sequence[i][j].toString() + data_sequence[i][j + 1].toString()\n                    }\n                    svg_node.append('rect')\n                        .attr('x', x_scale(j))\n                        .attr('y', y_position[j][key_t])\n                        .attr('height', y_scale)\n                        .attr('width', 20)\n                        .attr('fill', color(data_sequence[i][j]))\n                        .attr('stroke', color(data_sequence[i][j]))\n                        .attr('class', 'node' + key_sequence[i][j])\n\n                    y_position[j][key_t] = y_position[j][key_t] + y_scale\n                    //画link，跟上一个点连起来，但是这不是sankey的画法\n                    // if (j != 0){\n                    //     svg_node.append('line')\n                    //         .attr(\"x1\", x_scale(j))\n                    //         .attr(\"x2\", x_scale(j-1) + 20)\n                    //         .attr(\"y1\", y_position[j][key_t])\n                    //         .attr(\"y2\", y_last)\n                    //         .attr(\"stroke\", \"black\")\n                    // }\n                    y_last = y_position[j][key_t]\n                }\n            }\n\n        },\n        draweventprogression(stage_number, data, y_start) {\n            //console.log(\"event progression view\", data)\n            const width = 800\n            const height = 750\n            const _this = this\n            const user_number = data.length\n            const svg = d3.select(\".eventprogression\").append(\"g\")\n                .attr(\"class\", \"svg\")\n                .attr(\"width\", 800)\n                .attr(\"height\", 750)\n                .attr(\"transform\", \"translate(0, \" + (y_start + 10) + \")\")\n\n            var data_dic = new Array()\n            for (let i = 0; i < 27; i++) {\n                data_dic[i] = new Array()\n                for (let j = 0; j < stage_number; j++) {\n                    data_dic[i][j] = 0\n                }\n            }\n\n            var subgroups = []\n            for (let j = 0; j < stage_number; j++) {\n                subgroups.push('stage' + j)\n            }\n\n            for (let i = 0; i < data.length; i++) { //第i个人\n                for (let j = 0; j < data[i].length; j++) {\n                    if (j == 27) {\n                        continue\n                    }\n                    let stage = data[i][j][3]\n                    data_dic[j][stage] += 1\n                }\n            }\n\n            var data_vis = []\n            for (let i = 0; i < 27; i++) {\n                let temp = new Array()\n                temp[\"group\"] = i + 1\n                for (let j = 0; j < stage_number; j++) {\n                    temp[\"stage\" + j] = data_dic[i][j]\n                }\n                data_vis.push(temp)\n            }\n\n            data = data_vis\n\n            var groups = d3.map(data, function (d) { return (d.group) }).keys()\n\n            // Add X axis\n            var x = d3.scaleBand()\n                .domain(groups)\n                .range([20, width])\n                .padding([0.2])\n            svg.append(\"g\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(d3.axisBottom(x).tickSizeOuter(0))\n\n            // Add Y axis\n            var y = d3.scaleLinear()\n                .domain([0, user_number])\n                .range([height, 20])\n            svg.append(\"g\")\n                .call(d3.axisLeft(y))\n                .attr(\"transform\", \"translate(27, 0)\")\n\n            // color palette = one color per subgroup\n            var color = d3.scaleOrdinal()\n                .domain(subgroups)\n                .range(d3.schemeTableau10)\n\n            // 把每个stage对应的颜色打印出来\n            if (y_start == 0) {\n                for (let c = 0; c < subgroups.length; c++) {\n                    svg.append(\"rect\")\n                        .attr(\"x\", 10 + c * 60)\n                        .attr(\"y\", 3)\n                        .attr(\"fill\", color(subgroups[c]))\n                        .attr(\"width\", 10)\n                        .attr(\"height\", 10)\n\n                    svg.append(\"text\")\n                        .attr(\"x\", 10 + c * 60 + 15)\n                        .attr(\"y\", 10)\n                        .attr(\"font-size\", 7)\n                        .text(subgroups[c])\n                }\n            }\n\n            //stack the data? --> stack per subgroup\n            var stackedData = d3.stack()\n                .keys(subgroups)(data)\n\n            //console.log(stackedData)\n\n            svg.append(\"g\")\n                .selectAll(\"g\")\n                // Enter in the stack data = loop key per key = group per group\n                .data(stackedData)\n                .join(\"g\")\n                .attr(\"fill\", d => color(d.key))\n                .attr(\"class\", d => \"myRect \" + d.key) // Add a class to each subgroup: their name\n                .selectAll(\"rect\")\n                // enter a second time = loop subgroup per subgroup to add all rectangles\n                .data(d => d)\n                .join(\"rect\")\n                .attr(\"x\", d => x(d.data.group))\n                .attr(\"y\", d => y(d[1]))\n                .attr(\"height\", d => y(d[0]) - y(d[1]))\n                .attr(\"width\", x.bandwidth())\n                .attr(\"stroke\", \"#5b5b5b\")\n                .on(\"mouseover\", function (event, d) { // What happens when user hover a bar\n                    // what subgroup are we hovering\n                    const subGroupName = d3.select(this.parentNode).datum().key\n                    // Reduce opacity of all rect to 0.2\n                    d3.selectAll(\".myRect\").style(\"opacity\", 0.2)\n                    // Highlight all rects of this subgroup with opacity 1. It is possible to select them since they have a specific class = their name.\n                    d3.selectAll(\".\" + subGroupName).style(\"opacity\", 1)\n                })\n                .on(\"mouseleave\", function (event, d) { // When user do not hover anymore\n                    d3.selectAll(\".myRect\")\n                        .style(\"opacity\", 1)\n                })\n        }\n    }\n}"]}]}