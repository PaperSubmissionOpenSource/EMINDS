{"remainingRequest":"/Users/shengrui/Desktop/vis2023/system/system/frontend/node_modules/babel-loader/lib/index.js!/Users/shengrui/Desktop/vis2023/system/system/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/shengrui/Desktop/vis2023/system/system/frontend/src/assets/sankey.js","dependencies":[{"path":"/Users/shengrui/Desktop/vis2023/system/system/frontend/src/assets/sankey.js","mtime":1676982062466},{"path":"/Users/shengrui/Desktop/vis2023/system/system/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1729690872023},{"path":"/Users/shengrui/Desktop/vis2023/system/system/frontend/node_modules/babel-loader/lib/index.js","mtime":1729690872396},{"path":"/Users/shengrui/Desktop/vis2023/system/system/frontend/node_modules/eslint-loader/index.js","mtime":1729690872072}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/shengrui/Desktop/vis2023/system/system/frontend/src/assets/sankey.js"],"names":["d3","sankey","nodeWidth","nodePadding","size","nodes","links","_","arguments","length","layout","iterations","computeNodeLinks","computeNodeValues","computeNodeBreadths","computeNodeDepths","computeLinkDepths","relayout","link","curvature","d","x0","source","x","dx","x1","target","xi","interpolateNumber","x2","x3","y0","y","sy","dy","y1","ty","forEach","node","sourceLinks","targetLinks","push","value","Math","max","sum","remainingNodes","nextNodes","moveSinksRight","scaleNodeBreadths","moveSourcesRight","min","kx","nodesByBreadth","nest","key","sortKeys","ascending","entries","map","values","initializeNodeDepth","resolveCollisions","alpha","relaxRightToLeft","relaxLeftToRight","ky","console","log","i","breadth","weightedSource","center","slice","reverse","weightedTarget","n","sort","ascendingDepth","a","b","ascendingTargetDepth","ascendingSourceDepth"],"mappings":"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","sourcesContent":["import * as d3 from 'd3'\nd3.sankey = function() {\n  var sankey = {},\n      nodeWidth = 24,\n      nodePadding = 8,\n      size = [1, 1],\n      nodes = [],\n      links = [];\n \n  sankey.nodeWidth = function(_) {\n    if (!arguments.length) return nodeWidth;\n    nodeWidth = +_;\n    return sankey;\n  };\n \n  sankey.nodePadding = function(_) {\n    if (!arguments.length) return nodePadding;\n    nodePadding = +_;\n    return sankey;\n  };\n \n  sankey.nodes = function(_) {\n    if (!arguments.length) return nodes;\n    nodes = _;\n    return sankey;\n  };\n \n  sankey.links = function(_) {\n    if (!arguments.length) return links;\n    links = _;\n    return sankey;\n  };\n \n  sankey.size = function(_) {\n    if (!arguments.length) return size;\n    size = _;\n    return sankey;\n  };\n \n  sankey.layout = function(iterations) {\n    computeNodeLinks();\n    computeNodeValues();\n    computeNodeBreadths();\n    computeNodeDepths(iterations);\n    computeLinkDepths();\n    return sankey;\n  };\n \n  sankey.relayout = function() {\n    computeLinkDepths();\n    return sankey;\n  };\n \n  sankey.link = function() {\n    var curvature = .5;\n \n    function link(d) {\n      var x0 = d.source.x + d.source.dx,\n          x1 = d.target.x,\n          xi = d3.interpolateNumber(x0, x1),\n          x2 = xi(curvature),\n          x3 = xi(1 - curvature),\n          y0 = d.source.y + d.sy + d.dy / 2,\n          y1 = d.target.y + d.ty + d.dy / 2;\n      return \"M\" + x0 + \",\" + y0\n           + \"C\" + x2 + \",\" + y0\n           + \" \" + x3 + \",\" + y1\n           + \" \" + x1 + \",\" + y1;\n    }\n \n    link.curvature = function(_) {\n      if (!arguments.length) return curvature;\n      curvature = +_;\n      return link;\n    };\n \n    return link;\n  };\n \n  // Populate the sourceLinks and targetLinks for each node.\n  // Also, if the source and target are not objects, assume they are indices.\n  function computeNodeLinks() {\n    nodes.forEach(function(node) {\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    });\n    links.forEach(function(link) {\n      var source = link.source,\n          target = link.target;\n      if (typeof source === \"number\") source = link.source = nodes[link.source];\n      if (typeof target === \"number\") target = link.target = nodes[link.target];\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    });\n  }\n \n  // Compute the value (size) of each node by summing the associated links.\n  function computeNodeValues() {\n    nodes.forEach(function(node) {\n      node.value = Math.max(\n        d3.sum(node.sourceLinks, value),\n        d3.sum(node.targetLinks, value)\n      );\n    });\n  }\n \n  // Iteratively assign the breadth (x-position) for each node.\n  // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n  // nodes with no incoming links are assigned breadth zero, while\n  // nodes with no outgoing links are assigned the maximum breadth.\n  function computeNodeBreadths() {\n    var remainingNodes = nodes,\n        nextNodes,\n        x = 0;\n \n    while (remainingNodes.length) {\n      nextNodes = [];\n      remainingNodes.forEach(function(node) {\n        node.x = x;\n        node.dx = nodeWidth;\n        node.sourceLinks.forEach(function(link) {\n          nextNodes.push(link.target);\n        });\n      });\n      remainingNodes = nextNodes;\n      ++x;\n    }\n \n    //\n    moveSinksRight(x);\n    scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n  }\n \n  function moveSourcesRight() {\n    nodes.forEach(function(node) {\n      if (!node.targetLinks.length) {\n        node.x = d3.min(node.sourceLinks, function(d) { return d.target.x; }) - 1;\n      }\n    });\n  }\n \n  function moveSinksRight(x) {\n    nodes.forEach(function(node) {\n      if (!node.sourceLinks.length) {\n        node.x = x - 1;\n      }\n    });\n  }\n \n  function scaleNodeBreadths(kx) {\n    nodes.forEach(function(node) {\n      node.x *= kx;\n    });\n  }\n \n  function computeNodeDepths(iterations) {\n    var nodesByBreadth = d3.nest()\n        .key(function(d) { return d.x; })\n        .sortKeys(d3.ascending)\n        .entries(nodes)\n        .map(function(d) { return d.values; });\n \n    //\n    initializeNodeDepth();\n    resolveCollisions();\n    for (var alpha = 1; iterations > 0; --iterations) {\n      relaxRightToLeft(alpha *= .99);\n      resolveCollisions();\n      relaxLeftToRight(alpha);\n      resolveCollisions();\n    }\n \n    function initializeNodeDepth() {\n      var ky = d3.min(nodesByBreadth, function(nodes) {\n        console.log((size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value))\n        return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value)\n      });\n \n      nodesByBreadth.forEach(function(nodes) {\n        nodes.forEach(function(node, i) {\n          node.y = i;\n          node.dy = node.value * ky;\n        });\n      });\n \n      links.forEach(function(link) {\n        link.dy = link.value * ky;\n      });\n    }\n \n    function relaxLeftToRight(alpha) {\n      nodesByBreadth.forEach(function(nodes, breadth) {\n        nodes.forEach(function(node) {\n          if (node.targetLinks.length) {\n            var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n            node.y += (y - center(node)) * alpha;\n          }\n        });\n      });\n \n      function weightedSource(link) {\n        return center(link.source) * link.value;\n      }\n    }\n \n    function relaxRightToLeft(alpha) {\n      nodesByBreadth.slice().reverse().forEach(function(nodes) {\n        nodes.forEach(function(node) {\n          if (node.sourceLinks.length) {\n            var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n            node.y += (y - center(node)) * alpha;\n          }\n        });\n      });\n \n      function weightedTarget(link) {\n        return center(link.target) * link.value;\n      }\n    }\n \n    function resolveCollisions() {\n      nodesByBreadth.forEach(function(nodes) {\n        var node,\n            dy,\n            y0 = 0,\n            n = nodes.length,\n            i;\n \n        // Push any overlapping nodes down.\n        nodes.sort(ascendingDepth);\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          dy = y0 - node.y;\n          if (dy > 0) node.y += dy;\n          y0 = node.y + node.dy + nodePadding;\n        }\n \n        // If the bottommost node goes outside the bounds, push it back up.\n        dy = y0 - nodePadding - size[1];\n        if (dy > 0) {\n          y0 = node.y -= dy;\n \n          // Push any overlapping nodes back up.\n          for (i = n - 2; i >= 0; --i) {\n            node = nodes[i];\n            dy = node.y + node.dy + nodePadding - y0;\n            if (dy > 0) node.y -= dy;\n            y0 = node.y;\n          }\n        }\n      });\n    }\n \n    function ascendingDepth(a, b) {\n      return a.y - b.y;\n    }\n  }\n \n  function computeLinkDepths() {\n    nodes.forEach(function(node) {\n      node.sourceLinks.sort(ascendingTargetDepth);\n      node.targetLinks.sort(ascendingSourceDepth);\n    });\n    nodes.forEach(function(node) {\n      var sy = 0, ty = 0;\n      node.sourceLinks.forEach(function(link) {\n        link.sy = sy;\n        sy += link.dy;\n      });\n      node.targetLinks.forEach(function(link) {\n        link.ty = ty;\n        ty += link.dy;\n      });\n    });\n \n    function ascendingSourceDepth(a, b) {\n      return a.source.y - b.source.y;\n    }\n \n    function ascendingTargetDepth(a, b) {\n      return a.target.y - b.target.y;\n    }\n  }\n \n  function center(node) {\n    return node.y + node.dy / 2;\n  }\n \n  function value(link) {\n    return link.value;\n  }\n \n  return sankey;\n};"]}]}